@using System.Security.Claims
@model TestProgrammasy.DTOs.EditTestDTO
@{
    ViewData["Title"] = "Testi Üýtgetmek";
}

<div class="card">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h3 class="mb-0">Testi üýtgetmek</h3>
    </div>
    <div class="card-body">
        <form asp-action="Edit" method="post">
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="CreatedAt" />

            <div class="row">
                <input type="hidden" name="UserId" value=@User.FindFirstValue(ClaimTypes.NameIdentifier) />
                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="Name" class="form-label">Test ady</label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group mb-3">
                        <label asp-for="Type" class="form-label">Dersi saýlaň</label>
                        <select asp-for="Type" class="custom-select">
                            <option value=""></option>
                            <option value="Türkmen dili">Türkmen dili</option>
                            <option value="Edebiýat">Edebiýat</option>
                            <option value="Matematika">Matematika</option>
                            <option value="Fizika">Fizika</option>
                            <option value="Himiýa">Himiýa</option>
                            <option value="Biologiýa">Biologiýa</option>
                            <option value="Geografiýa">Geografiýa</option>
                            <option value="Taryh">Taryh</option>
                            <option value="Zähmet">Zähmet</option>
                            <option value="Informatika">Informatika</option>
                            <option value="Tehnologiýa">Tehnologiýa</option>
                            <option value="Rus dili">Rus dili</option>
                            <option value="Bedenterbiýe">Bedenterbiýe</option>
                            <option value="Şekillendiriş sungaty">Şekillendiriş sungaty</option>
                            <option value="Iňlis dili">Iňlis dili</option>
                            <option value="Kommunikasiýa">Kommunikasiýa</option>
                            <option value="Astronomiýa">Astronomiýa</option>
                            <option value="Algebra">Algebra</option>
                            <option value="Geometriýa">Geometriýa</option>
                            <option value="Matematiki modelirleme">Matematiki modelirleme</option>
                        </select>
                        <span asp-validation-for="Type" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="form-group mb-3">
                        <label asp-for="Description" class="form-label">Giňişleýin</label>
                        <input asp-for="Description" class="form-control" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group mb-3">
                        <label asp-for="Level" class="form-label">Derejesini saýlaň</label>
                        <select asp-for="Level" class="custom-select">
                            <option value=""></option>
                            <option value="Ýönekeý">Ýönekeý</option>
                            <option value="Orta">Orta</option>
                            <option value="Çylşyrymly">Çylşyrymly</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group mb-3">
                        <label asp-for="TimeLimit" class="form-label">Wagty(minutda)</label>
                        <input asp-for="TimeLimit" class="form-control" />
                        <span asp-validation-for="TimeLimit" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div id="questions-container">
                @for (int i = 0; i < Model.Questions.Count; i++)
                {
                    <div class="question-block card mb-4">
                        <div class="card-body">
                            <input type="hidden" asp-for="Questions[i].Id" />

                            <div class="form-group">
                                <label>Sorag №@(i + 1)</label>
                                <textarea asp-for="Questions[i].QuestionText" class="form-control" rows="2"></textarea>
                                <span asp-validation-for="Questions[i].QuestionText" class="text-danger"></span>
                            </div>

                            <div class="answers-container">
                                @for (int j = 0; j < Model.Questions[i].Answers.Count; j++)
                                {
                                    <div class="answer-row d-flex align-items-center mb-2">
                                        <input type="hidden" asp-for="Questions[i].Answers[j].Id" />

                                        <div class="form-check mr-2 d-flex align-items-center">
                                            <input type="radio"
                                                   name="Questions[@i].CorrectAnswerIndex"
                                                   value="@j"
                                            @(Model.Questions[i].CorrectAnswerIndex == j ? "checked" : "")
                                                   class="form-check-input" />
                                        </div>

                                        <div class="flex-grow-1">
                                            <input asp-for="Questions[i].Answers[j].AnswerText"
                                                   class="form-control"
                                                   placeholder="Jogap warianty" />
                                            <input type="hidden"
                                                   asp-for="Questions[i].Answers[j].Order"
                                                   value="@j" />
                                            <span asp-validation-for="Questions[i].Answers[j].AnswerText"
                                                  class="text-danger"></span>
                                        </div>

                                        <button type="button"
                                                class="btn btn-danger btn-sm ml-2"
                                                onclick="removeAnswer(this)">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                                                <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
                                            </svg>
                                        </button>
                                    </div>
                                }
                            </div>

                            <div class="mt-2">
                                <button type="button"
                                        class="btn btn-secondary btn-sm"
                                        onclick="addAnswer(@i)">
                                    Jogap goş
                                </button>

                                <button type="button"
                                        class="btn btn-danger btn-sm"
                                        onclick="removeQuestion(this)">
                                    Sоrаgy poz
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>

                <button type="button"
                        class="btn btn-secondary"
                        onclick="addQuestion()">
                    Täze sorag goş
                </button>

                <div class="mt-4">
                    <button type="submit" class="btn btn-primary">Ýatda sakla</button>
                    <a asp-action="Index" class="btn btn-light">Yza gaýt</a>
                </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function addQuestion() {
            const questionCount = document.querySelectorAll('.question-block').length;
            const questionHtml = `
                <div class="question-block card mb-4">
                    <div class="card-body">
                        <div class="form-group">
                            <label>Sorag №${questionCount + 1}</label>
                            <textarea name="Questions[${questionCount}].QuestionText"
                                    class="form-control"
                                    rows="2"></textarea>
                        </div>

                        <div class="answers-container">
                            <div class="answer-row d-flex align-items-center mb-2">
                                <div class="form-check mr-2 d-flex align-items-center">
                                    <input type="radio"
                                           name="Questions[${questionCount}].CorrectAnswerIndex"
                                           value="0"
                                           checked
                                           class="form-check-input" />
                                </div>
                                <div class="flex-grow-1">
                                    <input name="Questions[${questionCount}].Answers[0].AnswerText"
                                           class="form-control"
                                           placeholder="Jogap warianty" />
                                    <input type="hidden"
                                           name="Questions[${questionCount}].Answers[0].Order"
                                           value="0" />
                                </div>
                                <button type="button"
                                        class="btn btn-danger btn-sm ml-2"
                                        onclick="removeAnswer(this)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                                        <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
                                    </svg>
                                </button>
                            </div>
                        </div>

                        <div class="mt-2">
                            <button type="button"
                                    class="btn btn-secondary btn-sm"
                                    onclick="addAnswer(${questionCount})">
                                Jogap goş
                            </button>
                            <button type="button"
                                    class="btn btn-danger btn-sm"
                                    onclick="removeQuestion(this)">
                                Sоrаgy poz
                            </button>
                        </div>
                    </div>
                </div>`;

            document.getElementById('questions-container').insertAdjacentHTML('beforeend', questionHtml);
        }

        function addAnswer(questionIndex) {
            const answersContainer = document.querySelectorAll('.answers-container')[questionIndex];
            const answerCount = answersContainer.querySelectorAll('.answer-row').length;

            const answerHtml = `
                <div class="answer-row d-flex align-items-center mb-2">
                    <div class="form-check mr-2 d-flex align-items-center">
                        <input type="radio"
                               name="Questions[${questionIndex}].CorrectAnswerIndex"
                               value="${answerCount}"
                               class="form-check-input" />
                    </div>
                    <div class="flex-grow-1">
                        <input name="Questions[${questionIndex}].Answers[${answerCount}].AnswerText"
                               class="form-control"
                               placeholder="Jogap warianty" />
                        <input type="hidden"
                               name="Questions[${questionIndex}].Answers[${answerCount}].Order"
                               value="${answerCount}" />
                    </div>
                    <button type="button"
                            class="btn btn-danger btn-sm ml-2"
                            onclick="removeAnswer(this)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
                        </svg>
                    </button>
                </div>`;

            answersContainer.insertAdjacentHTML('beforeend', answerHtml);
        }

        function removeQuestion(button) {
            if (confirm('Sоrаgy pozmak isleýärsiňizmi?')) {
                button.closest('.question-block').remove();
                updateQuestionNumbers();
                updateAllQuestionsIndexes();
            }
        }

        function removeAnswer(button) {
            if (confirm('Jogaby pozmak isleýärsiňizmi?')) {
                const answerRow = button.closest('.answer-row');
                const questionBlock = answerRow.closest('.question-block');
                answerRow.remove();
                updateAnswerIndexes(questionBlock);
            }
        }

        function updateQuestionNumbers() {
            document.querySelectorAll('.question-block').forEach((block, index) => {
                block.querySelector('label').textContent = `Sorag №${index + 1}`;
                updateQuestionIndexInNames(block, index);
            });
        }

        function updateQuestionIndexInNames(questionBlock, newIndex) {
            // Update question text name
            const questionText = questionBlock.querySelector('textarea[name*="Questions"]');
            questionText.name = `Questions[${newIndex}].QuestionText`;

            // Update correct answer index name
            const radioButtons = questionBlock.querySelectorAll('input[type="radio"]');
            radioButtons.forEach(radio => {
                radio.name = `Questions[${newIndex}].CorrectAnswerIndex`;
            });

            // Update answer text and order names
            const answers = questionBlock.querySelectorAll('.answer-row');
            answers.forEach((answer, answerIndex) => {
                const answerText = answer.querySelector('input[name*="AnswerText"]');
                const orderInput = answer.querySelector('input[name*="Order"]');

                answerText.name = `Questions[${newIndex}].Answers[${answerIndex}].AnswerText`;
                orderInput.name = `Questions[${newIndex}].Answers[${answerIndex}].Order`;
                orderInput.value = answerIndex;
            });
        }

        function updateAnswerIndexes(questionBlock) {
            const questionIndex = Array.from(document.querySelectorAll('.question-block')).indexOf(questionBlock);
            const answers = questionBlock.querySelectorAll('.answer-row');

            answers.forEach((answer, index) => {
                const radio = answer.querySelector('input[type="radio"]');
                const answerText = answer.querySelector('input[name*="AnswerText"]');
                const orderInput = answer.querySelector('input[name*="Order"]');

                radio.value = index;
                answerText.name = `Questions[${questionIndex}].Answers[${index}].AnswerText`;
                orderInput.name = `Questions[${questionIndex}].Answers[${index}].Order`;
                orderInput.value = index;
            });
        }

        function updateAllQuestionsIndexes() {
            document.querySelectorAll('.question-block').forEach((block, index) => {
                updateQuestionIndexInNames(block, index);
            });
        }
    </script>
}