@model TestProgrammasy.DTOs.CreateTestDTO
@using System.Security.Claims

<div class="card">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h3 class="mb-0">Täze Test Döretmek</h3>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post">
            <div class="row">
                <input type="hidden" name="UserId" value=@User.FindFirstValue(ClaimTypes.NameIdentifier) />
                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="Name" class="form-label">Test ady</label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="Description" class="form-label">Giňişleýin</label>
                        <input asp-for="Description" class="form-control" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group mb-3">
                        <label asp-for="Level" class="form-label">Derejesini saýlaň</label>
                        <select asp-for="Level" class="custom-select">
                            <option value=""></option>
                            <option value="Ýeňil">Ýeňil</option>
                            <option value="Orta">Orta</option>
                            <option value="Agyr">Agyr</option>
                        </select>
                        <span asp-validation-for="Level" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group mb-3">
                        <label asp-for="TimeLimit" class="form-label">Wagty(minutda)</label>
                        <input asp-for="TimeLimit" class="form-control" />
                        <span asp-validation-for="TimeLimit" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div id="questions-container">
                <!-- Questions will be added here dynamically -->
            </div>

            @* <div class="mt-3">
                <button type="button" class="btn btn-secondary" onclick="addQuestion()">
                    <i class="bi bi-plus-circle"></i> Sorag goş
                </button>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save"></i> Testi atda sakla
                </button>
            </div> *@

            <button type="button"
                    class="btn btn-secondary"
                    onclick="addQuestion()">
                Sorag goş
            </button>

            <div class="mt-4">
                <button type="submit" class="btn btn-primary">Testi ýatda sakla</button>
                <a asp-action="Index" class="btn btn-light">Yza gaýt</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function addQuestion() {
            const questionCount = document.querySelectorAll('.question-block').length;
            const questionHtml = `
                <div class="question-block card mb-4">
                    <div class="card-body">
                        <div class="form-group">
                            <label>Sorag №${questionCount + 1}</label>
                            <textarea name="Questions[${questionCount}].QuestionText"
                                    class="form-control"
                                    rows="2"></textarea>
                        </div>

                        <div class="answers-container">
                            <div class="answer-row d-flex align-items-center mb-2">
                                <div class="form-check mr-2 d-flex align-items-center">
                                    <input type="radio"
                                           name="Questions[${questionCount}].CorrectAnswerIndex"
                                           value="0"
                                           checked
                                           class="form-check-input" />
                                </div>
                                <div class="flex-grow-1">
                                    <input name="Questions[${questionCount}].Answers[0].AnswerText"
                                           class="form-control"
                                           placeholder="Jogap warianty" />
                                </div>
                                <button type="button"
                                                class="btn btn-danger btn-sm ml-2"
                                                onclick="removeAnswer(this)">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                                                <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
                                            </svg
                                        </button>
                            </div>
                        </div>

                        <div class="mt-2">
                            <button type="button"
                                    class="btn btn-secondary btn-sm"
                                    onclick="addAnswer(${questionCount})">
                                Jogap goş
                            </button>
                            <button type="button"
                                    class="btn btn-danger btn-sm"
                                    onclick="removeQuestion(this)">
                                Sоrаgy poz
                            </button>
                        </div>
                    </div>
                </div>`;

            document.getElementById('questions-container').insertAdjacentHTML('beforeend', questionHtml);
        }

        function addAnswer(questionIndex) {
            const answersContainer = document.querySelectorAll('.answers-container')[questionIndex];
            const answerCount = answersContainer.querySelectorAll('.answer-row').length;

            const answerHtml = `
                <div class="answer-row d-flex align-items-center mb-2">
                    <div class="form-check mr-2 d-flex align-items-center">
                        <input type="radio"
                               name="Questions[${questionIndex}].CorrectAnswerIndex"
                               value="${answerCount}"
                               class="form-check-input" />
                    </div>
                    <div class="flex-grow-1">
                        <input name="Questions[${questionIndex}].Answers[${answerCount}].AnswerText"
                               class="form-control"
                               placeholder="Jogap warianty" />
                    </div>
                    <button type="button"
                            class="btn btn-danger btn-sm ml-2"
                            onclick="removeAnswer(this)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                                                <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
                                            </svg
                    </button>
                </div>`;

            answersContainer.insertAdjacentHTML('beforeend', answerHtml);
        }

        function removeQuestion(button) {
            if (confirm('Sораgy pozmak isleýärsiňizmi?')) {
                button.closest('.question-block').remove();
                updateQuestionNumbers();
            }
        }

        function removeAnswer(button) {
            if (confirm('Jogaby pozmak isleýärsiňizmi?')) {
                const answerRow = button.closest('.answer-row');
                const questionBlock = answerRow.closest('.question-block');
                answerRow.remove();
                updateAnswerIndexes(questionBlock);
            }
        }

        function updateQuestionNumbers() {
            document.querySelectorAll('.question-block').forEach((block, index) => {
                block.querySelector('label').textContent = `Sorag №${index + 1}`;
            });
        }

        function updateAnswerIndexes(questionBlock) {
            const answers = questionBlock.querySelectorAll('.answer-row');
            answers.forEach((answer, index) => {
                const radio = answer.querySelector('input[type="radio"]');
                radio.value = index;
            });
        }
    </script>
}